[{"D:\\dev\\todos\\src\\index.tsx":"1","D:\\dev\\todos\\src\\components\\todosList\\todosList.tsx":"2","D:\\dev\\todos\\src\\components\\todosList\\index.ts":"3","D:\\dev\\todos\\src\\utils\\urlList.ts":"4","D:\\dev\\todos\\src\\components\\main\\index.ts":"5","D:\\dev\\todos\\src\\components\\header\\header.tsx":"6","D:\\dev\\todos\\src\\components\\header\\index.ts":"7","D:\\dev\\todos\\src\\components\\todo\\todo.tsx":"8","D:\\dev\\todos\\src\\components\\main\\main.tsx":"9","D:\\dev\\todos\\src\\components\\arrowback\\arrowback.tsx":"10","D:\\dev\\todos\\src\\components\\arrowback\\index.ts":"11","D:\\dev\\todos\\src\\components\\todo\\index.ts":"12","D:\\dev\\todos\\src\\components\\modal\\ModalAddTodo.tsx":"13","D:\\dev\\todos\\src\\components\\panelTodo\\panelTodo.tsx":"14","D:\\dev\\todos\\src\\components\\modal\\index.ts":"15","D:\\dev\\todos\\src\\components\\modal\\ModalDeleteTodo.tsx":"16"},{"size":539,"mtime":1607956047045,"results":"17","hashOfConfig":"18"},{"size":1986,"mtime":1607971844269,"results":"19","hashOfConfig":"18"},{"size":65,"mtime":1607802469565,"results":"20","hashOfConfig":"18"},{"size":112,"mtime":1607956047050,"results":"21","hashOfConfig":"18"},{"size":48,"mtime":1607956047028,"results":"22","hashOfConfig":"18"},{"size":478,"mtime":1607956047027,"results":"23","hashOfConfig":"18"},{"size":56,"mtime":1607864863282,"results":"24","hashOfConfig":"18"},{"size":5651,"mtime":1607971193460,"results":"25","hashOfConfig":"18"},{"size":4589,"mtime":1607956047029,"results":"26","hashOfConfig":"18"},{"size":154,"mtime":1607956047025,"results":"27","hashOfConfig":"18"},{"size":63,"mtime":1607871777815,"results":"28","hashOfConfig":"18"},{"size":48,"mtime":1607956047034,"results":"29","hashOfConfig":"18"},{"size":2385,"mtime":1607956047030,"results":"30","hashOfConfig":"18"},{"size":1087,"mtime":1607956047032,"results":"31","hashOfConfig":"18"},{"size":135,"mtime":1607932148618,"results":"32","hashOfConfig":"18"},{"size":948,"mtime":1607972750856,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hcs8c3",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\todos\\src\\index.tsx",[],"D:\\dev\\todos\\src\\components\\todosList\\todosList.tsx",[],"D:\\dev\\todos\\src\\components\\todosList\\index.ts",[],"D:\\dev\\todos\\src\\utils\\urlList.ts",[],"D:\\dev\\todos\\src\\components\\main\\index.ts",[],"D:\\dev\\todos\\src\\components\\header\\header.tsx",[],"D:\\dev\\todos\\src\\components\\header\\index.ts",[],"D:\\dev\\todos\\src\\components\\todo\\todo.tsx",[],"D:\\dev\\todos\\src\\components\\main\\main.tsx",["68"],"import React, { useState, useEffect } from 'react';\r\nimport './main.scss';\r\nimport Header from '../header';\r\nimport TodoList from '../todosList';\r\nimport PanelTodo from '../panelTodo';\r\nimport { ModalAddTodo, ModalDeleteTodo } from '../modal';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport URL from '../../utils/urlList';\r\nimport { ITodo, ITodos, IResponseDeleteTodo, INewTodo } from '../../types/global';\r\nimport { IFilter } from './types';\r\nimport { Container, Spinner } from 'react-bootstrap';\r\n\r\nfunction Main() {\r\n    const [showModalAddTodo, setShowModalAddTodo] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [modalDeleteTodo, setModalDeleteTodo] = useState({show: false, id: '', title: ''});\r\n    const [todos, setTodos] = useState<ITodos>({items: [], total: 0})\r\n    const [filter, setFilter ] = useState<IFilter>({isFinished: false, isNotFinished: true});\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, [filter])\r\n\r\n    function handleCloseModalAddTodo() {\r\n        setShowModalAddTodo(false);\r\n    }\r\n\r\n    function handleShowModalAddTodo() {\r\n        setShowModalAddTodo(true)\r\n    }\r\n\r\n    function handleCloseModalDeleteTodo() {\r\n        setModalDeleteTodo({show: false, id: '', title: ''});\r\n    }\r\n\r\n    function handleShowModalDeleteTodo(id: string, title: string) {\r\n        setModalDeleteTodo({show: true, id, title})\r\n    }\r\n\r\n    function addTodo(newTodo: INewTodo) {\r\n        axios.post(URL.TODOS, newTodo).then((response: AxiosResponse)=>{\r\n            handleCloseModalAddTodo();\r\n            getTodos();\r\n        })\r\n    }\r\n\r\n    function getTodos() {\r\n        setLoading(true);\r\n        const params = getParams();\r\n        const url = params ? `${URL.TODOS}?${params}` : URL.TODOS;\r\n        axios.get(url).then((response: AxiosResponse<ITodos>) => {\r\n            setTodos(response.data);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    function deleteTodo() {\r\n        const id = modalDeleteTodo.id;\r\n        axios.delete(`${URL.TODOS}/${id}`).then((response: AxiosResponse<IResponseDeleteTodo>) => {\r\n            if(response.data.status === 'Success') {\r\n                getTodos();\r\n                handleCloseModalDeleteTodo();\r\n            }\r\n        })\r\n    }\r\n\r\n    function getParams() {\r\n        if(filter.isFinished && filter.isNotFinished) {\r\n            return '';\r\n        }\r\n        if(filter.isFinished) {\r\n            return 'isFinished=true';\r\n        }\r\n        if(filter.isNotFinished) {\r\n            return 'isFinished=false';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    function changeFinishedFilter() {\r\n        setFilter({isFinished: !filter.isFinished, isNotFinished: filter.isNotFinished});\r\n    }\r\n    function changeNotFinishedFilter() {\r\n        setFilter({isFinished: filter.isFinished, isNotFinished: !filter.isNotFinished});\r\n    }\r\n    function finishTodo(id: string) {\r\n        const todo = todos.items.filter((item: ITodo) => item.id === id)[0];\r\n        axios.put(`${URL.TODOS}/${id}`, {...todo, isFinished: true}).then((response) => {\r\n            getTodos();\r\n        })\r\n    }\r\n    return (\r\n        <div className='main'>\r\n            <ModalAddTodo \r\n                titleModal = 'Add new to do'\r\n                show = {showModalAddTodo}\r\n                handleClose = {handleCloseModalAddTodo}\r\n                handleSave = {addTodo}\r\n            />\r\n            <ModalDeleteTodo \r\n                show = {modalDeleteTodo.show}\r\n                title = {modalDeleteTodo.title}\r\n                id = {modalDeleteTodo.id}\r\n                handleClose = {handleCloseModalDeleteTodo}\r\n                handleOk = {deleteTodo}\r\n            />\r\n            <Header title={`Hi! It's your to do list.`}/>\r\n            <Container>\r\n            {\r\n                loading \r\n                ? <div className='loading'><Spinner animation=\"border\" variant=\"primary\" /> Loading...</div>\r\n                : <>\r\n                    <PanelTodo \r\n                        changeFinishedFilter = {changeFinishedFilter}\r\n                        changeNotFinishedFilter = {changeNotFinishedFilter}\r\n                        filter = {filter}\r\n                        handleShowModalAddTodos = {handleShowModalAddTodo}\r\n            \r\n                    />\r\n                    <TodoList \r\n                        finishTodo = {finishTodo}\r\n                        deleteTodo = {handleShowModalDeleteTodo}\r\n                        todos = {todos.items}\r\n                    />\r\n                </>\r\n            }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","D:\\dev\\todos\\src\\components\\arrowback\\arrowback.tsx",[],"D:\\dev\\todos\\src\\components\\arrowback\\index.ts",[],"D:\\dev\\todos\\src\\components\\todo\\index.ts",[],"D:\\dev\\todos\\src\\components\\modal\\ModalAddTodo.tsx",[],"D:\\dev\\todos\\src\\components\\panelTodo\\panelTodo.tsx",["69"],"import React from 'react';\r\nimport './panelTodo.scss';\r\nimport {Row, Col, Button, DropdownButton, Container} from 'react-bootstrap';\r\n\r\nfunction PanelTodo(props: any) {\r\n    const {\r\n        handleShowModalAddTodos,\r\n        changeFinishedFilter,\r\n        changeNotFinishedFilter,\r\n        filter,\r\n    } = props;\r\n\r\n    return (\r\n        <div className='panelTodo'>\r\n            <Row>\r\n                <Col>\r\n                    <Button variant=\"primary\" onClick={handleShowModalAddTodos}>Add</Button>\r\n                    <DropdownButton\r\n                        title = 'Filter'\r\n                        menuAlign=\"right\"\r\n                    >\r\n                        <span className='line' onClick={changeFinishedFilter}><input type='checkbox' checked={filter.isFinished}/>Finished</span>\r\n                        <span className='line' onClick={changeNotFinishedFilter}><input type='checkbox' checked={filter.isNotFinished}/>Not finished</span>\r\n                    </DropdownButton>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\nexport default PanelTodo;","D:\\dev\\todos\\src\\components\\modal\\index.ts",[],"D:\\dev\\todos\\src\\components\\modal\\ModalDeleteTodo.tsx",[],{"ruleId":"70","severity":1,"message":"71","line":21,"column":8,"nodeType":"72","endLine":21,"endColumn":16,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":43,"nodeType":"76","messageId":"77","endLine":3,"endColumn":52},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array.","ArrayExpression",["78"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar",{"desc":"79","fix":"80"},"Update the dependencies array to be: [filter, getTodos]",{"range":"81","text":"82"},[962,970],"[filter, getTodos]"]